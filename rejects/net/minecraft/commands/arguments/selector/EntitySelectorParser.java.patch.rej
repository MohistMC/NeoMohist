++++ REJECTED HUNK: 1
@@ -199,6 +199,14 @@
         };
     }
 
+    protected void parseSelector(boolean overridePermissions) throws CommandSyntaxException {
+        throw new RuntimeException("Not Implemented");
+    }
+
+    public EntitySelector parse(boolean overridePermissions) throws CommandSyntaxException {
+        throw new RuntimeException("Not Implemented");
+    }
+
     protected void parseSelector() throws CommandSyntaxException {
         this.usesSelectors = true;
         this.suggestions = this::suggestSelector;
++++ END HUNK

++++ REJECTED HUNK: 2
@@ -476,6 +484,9 @@
             }
 
             this.reader.skip();
+            EntitySelector forgeSelector = net.neoforged.neoforge.common.command.EntitySelectorManager.parseSelector(this);
+            if (forgeSelector != null)
+                return forgeSelector;
             this.parseSelector();
         } else {
             this.parseNameOrUUID();
++++ END HUNK

++++ REJECTED HUNK: 3
@@ -492,6 +503,7 @@
         p_121248_.suggest("@s", Component.translatable("argument.entity.selector.self"));
         p_121248_.suggest("@e", Component.translatable("argument.entity.selector.allEntities"));
         p_121248_.suggest("@n", Component.translatable("argument.entity.selector.nearestEntity"));
+        net.neoforged.neoforge.common.command.EntitySelectorManager.fillSelectorSuggestions(p_121248_);
     }
 
     private CompletableFuture<Suggestions> suggestNameOrSelector(SuggestionsBuilder p_121287_, Consumer<SuggestionsBuilder> p_121288_) {
++++ END HUNK
