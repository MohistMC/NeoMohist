--- a/net/minecraft/core/component/DataComponentPatch.java
+++ b/net/minecraft/core/component/DataComponentPatch.java
@@ -128,7 +_,7 @@
         }
     };
     private static final String REMOVED_PREFIX = "!";
-    public final Reference2ObjectMap<DataComponentType<?>, Optional<?>> map;
+    final Reference2ObjectMap<DataComponentType<?>, Optional<?>> map;
 
     DataComponentPatch(Reference2ObjectMap<DataComponentType<?>, Optional<?>> p_331816_) {
         this.map = p_331816_;
@@ -233,12 +_,13 @@
     }
 
     public static class Builder {
-        public final Reference2ObjectMap<DataComponentType<?>, Optional<?>> map = new Reference2ObjectArrayMap<>();
+        private final Reference2ObjectMap<DataComponentType<?>, Optional<?>> map = new Reference2ObjectArrayMap<>();
 
         Builder() {
         }
 
         public <T> DataComponentPatch.Builder set(DataComponentType<T> p_332004_, T p_331566_) {
+            net.neoforged.neoforge.common.CommonHooks.validateComponent(p_331566_);
             this.map.put(p_332004_, Optional.of(p_331566_));
             return this;
         }
@@ -254,6 +_,22 @@
 
         public DataComponentPatch build() {
             return this.map.isEmpty() ? DataComponentPatch.EMPTY : new DataComponentPatch(this.map);
+        }
+
+        public void copy(DataComponentPatch orig) {
+            throw new IllegalStateException("Not implemented");
+        }
+
+        public void clear(DataComponentType<?> type) {
+            throw new IllegalStateException("Not implemented");
+        }
+
+        public boolean isEmpty() {
+            throw new IllegalStateException("Not implemented");
+        }
+
+        public boolean isSet(DataComponentType<?> type) {
+            throw new IllegalStateException("Not implemented");
         }
     }
 
