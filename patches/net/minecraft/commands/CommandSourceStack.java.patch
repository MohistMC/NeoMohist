--- a/net/minecraft/commands/CommandSourceStack.java
+++ b/net/minecraft/commands/CommandSourceStack.java
@@ -17,6 +_,8 @@
 import java.util.function.Supplier;
 import java.util.stream.Stream;
 import javax.annotation.Nullable;
+
+import com.mojang.brigadier.tree.CommandNode;
 import net.minecraft.ChatFormatting;
 import net.minecraft.commands.arguments.EntityAnchorArgument;
 import net.minecraft.commands.execution.TraceCallbacks;
@@ -43,7 +_,7 @@
 import net.minecraft.world.phys.Vec2;
 import net.minecraft.world.phys.Vec3;
 
-public class CommandSourceStack implements ExecutionCommandSource<CommandSourceStack>, SharedSuggestionProvider {
+public class CommandSourceStack implements ExecutionCommandSource<CommandSourceStack>, SharedSuggestionProvider, net.neoforged.neoforge.common.extensions.ICommandSourceStackExtension {
     public static final SimpleCommandExceptionType ERROR_NOT_PLAYER = new SimpleCommandExceptionType(Component.translatable("permissions.requires.player"));
     public static final SimpleCommandExceptionType ERROR_NOT_ENTITY = new SimpleCommandExceptionType(Component.translatable("permissions.requires.entity"));
     public final CommandSource source;
@@ -61,6 +_,7 @@
     private final Vec2 rotation;
     private final CommandSigningContext signingContext;
     private final TaskChainer chatMessageChainer;
+    public volatile CommandNode currentCommand; // CraftBukkit
 
     public CommandSourceStack(
         CommandSource p_81302_,
@@ -389,6 +_,14 @@
     @Override
     public boolean hasPermission(int p_81370_) {
         return this.permissionLevel >= p_81370_;
+    }
+
+    public boolean hasPermission(int i, String bukkitPermission) {
+        return false;
+    }
+
+    public org.bukkit.command.CommandSender getBukkitSender() {
+        return source.getBukkitSender(this);
     }
 
     public Vec3 getPosition() {
