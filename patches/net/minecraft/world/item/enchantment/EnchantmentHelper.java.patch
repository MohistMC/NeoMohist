--- a/net/minecraft/world/item/enchantment/EnchantmentHelper.java
+++ b/net/minecraft/world/item/enchantment/EnchantmentHelper.java
@@ -47,7 +_,19 @@
 import org.apache.commons.lang3.mutable.MutableObject;
 
 public class EnchantmentHelper {
+    /**
+     * @deprecated Neo: Use {@link #getTagEnchantmentLevel(Holder, ItemStack)} for NBT enchantments, or {@link ItemStack#getEnchantmentLevel(Holder)} for gameplay.
+     */
+    @Deprecated
     public static int getItemEnchantmentLevel(Holder<Enchantment> p_346179_, ItemStack p_44845_) {
+        // Neo: To reduce patch size, update this method to always check gameplay enchantments, and add getTagEnchantmentLevel as a helper for mods.
+        return p_44845_.getEnchantmentLevel(p_346179_);
+    }
+
+    /**
+     * Gets the level of an enchantment from NBT. Use {@link ItemStack#getEnchantmentLevel(Holder)} for gameplay logic.
+     */
+    public static int getTagEnchantmentLevel(Holder<Enchantment> p_346179_, ItemStack p_44845_) {
         ItemEnchantments itemenchantments = p_44845_.getOrDefault(DataComponents.ENCHANTMENTS, ItemEnchantments.EMPTY);
         return itemenchantments.getLevel(p_346179_);
     }
@@ -78,7 +_,7 @@
         return p_330538_.getOrDefault(getComponentType(p_330538_), ItemEnchantments.EMPTY);
     }
 
-    private static DataComponentType<ItemEnchantments> getComponentType(ItemStack p_331909_) {
+    public static DataComponentType<ItemEnchantments> getComponentType(ItemStack p_331909_) {
         return p_331909_.is(Items.ENCHANTED_BOOK) ? DataComponents.STORED_ENCHANTMENTS : DataComponents.ENCHANTMENTS;
     }
 
@@ -119,19 +_,29 @@
         }
     }
 
-    private static void runIterationOnItem(ItemStack p_345425_, EnchantmentHelper.EnchantmentVisitor p_345023_) {
+    public static void runIterationOnItem(ItemStack p_345425_, EnchantmentHelper.EnchantmentVisitor p_345023_) {
         ItemEnchantments itemenchantments = p_345425_.getOrDefault(DataComponents.ENCHANTMENTS, ItemEnchantments.EMPTY);
 
+        // Neo: Respect gameplay-only enchantments when doing iterations
+        var lookup = net.neoforged.neoforge.common.CommonHooks.resolveLookup(net.minecraft.core.registries.Registries.ENCHANTMENT);
+        if (lookup != null) {
+            itemenchantments = p_345425_.getAllEnchantments(lookup);
+        }
+
         for (Entry<Holder<Enchantment>> entry : itemenchantments.entrySet()) {
             p_345023_.accept(entry.getKey(), entry.getIntValue());
         }
     }
 
-    private static void runIterationOnItem(
+    public static void runIterationOnItem(
         ItemStack p_44852_, EquipmentSlot p_345566_, LivingEntity p_345792_, EnchantmentHelper.EnchantmentInSlotVisitor p_345683_
     ) {
         if (!p_44852_.isEmpty()) {
             ItemEnchantments itemenchantments = p_44852_.get(DataComponents.ENCHANTMENTS);
+
+            // Neo: Respect gameplay-only enchantments when doing iterations
+            itemenchantments = p_44852_.getAllEnchantments(p_345792_.registryAccess().lookupOrThrow(net.minecraft.core.registries.Registries.ENCHANTMENT));
+
             if (itemenchantments != null && !itemenchantments.isEmpty()) {
                 EnchantedItemInUse enchantediteminuse = new EnchantedItemInUse(p_44852_, p_345566_, p_345792_);
 
@@ -145,7 +_,7 @@
         }
     }
 
-    private static void runIterationOnEquipment(LivingEntity p_344744_, EnchantmentHelper.EnchantmentInSlotVisitor p_345709_) {
+    public static void runIterationOnEquipment(LivingEntity p_344744_, EnchantmentHelper.EnchantmentInSlotVisitor p_345709_) {
         for (EquipmentSlot equipmentslot : EquipmentSlot.values()) {
             runIterationOnItem(p_344744_.getItemBySlot(equipmentslot), equipmentslot, p_344744_, p_345709_);
         }
@@ -417,6 +_,12 @@
     public static boolean hasTag(ItemStack p_345665_, TagKey<Enchantment> p_345928_) {
         ItemEnchantments itemenchantments = p_345665_.getOrDefault(DataComponents.ENCHANTMENTS, ItemEnchantments.EMPTY);
 
+        // Neo: Respect gameplay-only enchantments when enchantment effect tag checks
+        var lookup = net.neoforged.neoforge.common.CommonHooks.resolveLookup(net.minecraft.core.registries.Registries.ENCHANTMENT);
+        if (lookup != null) {
+            itemenchantments = p_345665_.getAllEnchantments(lookup);
+        }
+
         for (Entry<Holder<Enchantment>> entry : itemenchantments.entrySet()) {
             Holder<Enchantment> holder = entry.getKey();
             if (holder.is(p_345928_)) {
@@ -484,7 +_,7 @@
 
     public static int getEnchantmentCost(RandomSource p_220288_, int p_220289_, int p_220290_, ItemStack p_220291_) {
         Item item = p_220291_.getItem();
-        int i = item.getEnchantmentValue();
+        int i = p_220291_.getEnchantmentValue();
         if (i <= 0) {
             return 0;
         } else {
@@ -529,7 +_,7 @@
     public static List<EnchantmentInstance> selectEnchantment(RandomSource p_220298_, ItemStack p_220299_, int p_220300_, Stream<Holder<Enchantment>> p_346061_) {
         List<EnchantmentInstance> list = Lists.newArrayList();
         Item item = p_220299_.getItem();
-        int i = item.getEnchantmentValue();
+        int i = p_220299_.getEnchantmentValue();
         if (i <= 0) {
             return list;
         } else {
@@ -575,7 +_,9 @@
     public static List<EnchantmentInstance> getAvailableEnchantmentResults(int p_44818_, ItemStack p_44819_, Stream<Holder<Enchantment>> p_345348_) {
         List<EnchantmentInstance> list = Lists.newArrayList();
         boolean flag = p_44819_.is(Items.BOOK);
-        p_345348_.filter(p_344529_ -> p_344529_.value().isPrimaryItem(p_44819_) || flag).forEach(p_344478_ -> {
+        // Neo: Rewrite filter logic to call isPrimaryItemFor instead of hardcoded vanilla logic.
+        // The original logic is recorded in the default implementation of IItemExtension#isPrimaryItemFor.
+        p_345348_.filter(p_44819_::isPrimaryItemFor).forEach(p_344478_ -> {
             Enchantment enchantment = p_344478_.value();
 
             for (int i = enchantment.getMaxLevel(); i >= enchantment.getMinLevel(); i--) {
@@ -598,12 +_,12 @@
     }
 
     @FunctionalInterface
-    interface EnchantmentInSlotVisitor {
+    public interface EnchantmentInSlotVisitor {
         void accept(Holder<Enchantment> p_346326_, int p_346009_, EnchantedItemInUse p_345960_);
     }
 
     @FunctionalInterface
-    interface EnchantmentVisitor {
+    public interface EnchantmentVisitor {
         void accept(Holder<Enchantment> p_346050_, int p_44946_);
     }
 }
