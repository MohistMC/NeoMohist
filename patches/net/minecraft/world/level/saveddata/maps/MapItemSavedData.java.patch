--- a/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
+++ b/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
@@ -50,18 +_,18 @@
     public static final int MAX_SCALE = 4;
     public static final int TRACKED_DECORATION_LIMIT = 256;
     private static final String FRAME_PREFIX = "frame-";
-    public int centerX;
-    public int centerZ;
-    public ResourceKey<Level> dimension;
-    public boolean trackingPosition;
-    public boolean unlimitedTracking;
-    public byte scale;
+    public final int centerX;
+    public final int centerZ;
+    public final ResourceKey<Level> dimension;
+    private final boolean trackingPosition;
+    private final boolean unlimitedTracking;
+    public final byte scale;
     public byte[] colors = new byte[16384];
-    public boolean locked;
-    public final List<MapItemSavedData.HoldingPlayer> carriedBy = Lists.newArrayList();
-    public final Map<Player, MapItemSavedData.HoldingPlayer> carriedByPlayers = Maps.newHashMap();
+    public final boolean locked;
+    private final List<MapItemSavedData.HoldingPlayer> carriedBy = Lists.newArrayList();
+    private final Map<Player, MapItemSavedData.HoldingPlayer> carriedByPlayers = Maps.newHashMap();
     private final Map<String, MapBanner> bannerMarkers = Maps.newHashMap();
-    public final Map<String, MapDecoration> decorations = Maps.newLinkedHashMap();
+    final Map<String, MapDecoration> decorations = Maps.newLinkedHashMap();
     private final Map<String, MapFrame> frameMarkers = Maps.newHashMap();
     private int trackedDecorationCount;
 
@@ -365,7 +_,7 @@
         return mapitemsaveddata$holdingplayer == null ? null : mapitemsaveddata$holdingplayer.nextUpdatePacket(p_323760_);
     }
 
-    public void setColorsDirty(int p_164790_, int p_164791_) {
+    private void setColorsDirty(int p_164790_, int p_164791_) {
         this.setDirty();
 
         for (MapItemSavedData.HoldingPlayer mapitemsaveddata$holdingplayer : this.carriedBy) {
@@ -373,7 +_,7 @@
         }
     }
 
-    public void setDecorationsDirty() {
+    private void setDecorationsDirty() {
         this.setDirty();
         this.carriedBy.forEach(MapItemSavedData.HoldingPlayer::markDecorationsDirty);
     }
