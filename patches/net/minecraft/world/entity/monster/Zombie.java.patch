--- a/net/minecraft/world/entity/monster/Zombie.java
+++ b/net/minecraft/world/entity/monster/Zombie.java
@@ -77,7 +_,7 @@
     private static final ResourceLocation ZOMBIE_RANDOM_SPAWN_BONUS_ID = ResourceLocation.withDefaultNamespace("zombie_random_spawn_bonus");
     private static final EntityDataAccessor<Boolean> DATA_BABY_ID = SynchedEntityData.defineId(Zombie.class, EntityDataSerializers.BOOLEAN);
     private static final EntityDataAccessor<Integer> DATA_SPECIAL_TYPE_ID = SynchedEntityData.defineId(Zombie.class, EntityDataSerializers.INT);
-    public static final EntityDataAccessor<Boolean> DATA_DROWNED_CONVERSION_ID = SynchedEntityData.defineId(Zombie.class, EntityDataSerializers.BOOLEAN);
+    private static final EntityDataAccessor<Boolean> DATA_DROWNED_CONVERSION_ID = SynchedEntityData.defineId(Zombie.class, EntityDataSerializers.BOOLEAN);
     public static final float ZOMBIE_LEADER_CHANCE = 0.05F;
     public static final int REINFORCEMENT_ATTEMPTS = 50;
     public static final int REINFORCEMENT_RANGE_MAX = 40;
@@ -88,7 +_,7 @@
     private final BreakDoorGoal breakDoorGoal = new BreakDoorGoal(this, DOOR_BREAKING_PREDICATE);
     private boolean canBreakDoors;
     private int inWaterTime;
-    public int conversionTime;
+    protected int conversionTime;
 
     public Zombie(EntityType<? extends Zombie> p_34271_, Level p_34272_) {
         super(p_34271_, p_34272_);
@@ -253,12 +_,13 @@
         super.aiStep();
     }
 
-    public void startUnderWaterConversion(int p_34279_) {
+    private void startUnderWaterConversion(int p_34279_) {
         this.conversionTime = p_34279_;
         this.getEntityData().set(DATA_DROWNED_CONVERSION_ID, true);
     }
 
     protected void doUnderWaterConversion() {
+        if (!net.neoforged.neoforge.event.EventHooks.canLivingConvert(this, EntityType.DROWNED, (timer) -> this.conversionTime = timer)) return;
         this.convertToZombieType(EntityType.DROWNED);
         if (!this.isSilent()) {
             this.level().levelEvent(null, 1040, this.blockPosition(), 0);
@@ -270,6 +_,7 @@
         if (zombie != null) {
             zombie.handleAttributes(zombie.level().getCurrentDifficultyAt(zombie.blockPosition()).getSpecialMultiplier());
             zombie.setCanBreakDoors(zombie.supportsBreakDoorGoal() && this.canBreakDoors());
+            net.neoforged.neoforge.event.EventHooks.onLivingConvert(this, zombie);
         }
     }
 
@@ -406,7 +_,7 @@
     @Override
     public boolean killedEntity(ServerLevel p_219160_, LivingEntity p_219161_) {
         boolean flag = super.killedEntity(p_219160_, p_219161_);
-        if ((p_219160_.getDifficulty() == Difficulty.NORMAL || p_219160_.getDifficulty() == Difficulty.HARD) && p_219161_ instanceof Villager villager) {
+        if ((p_219160_.getDifficulty() == Difficulty.NORMAL || p_219160_.getDifficulty() == Difficulty.HARD) && p_219161_ instanceof Villager villager && net.neoforged.neoforge.event.EventHooks.canLivingConvert(p_219161_, EntityType.ZOMBIE_VILLAGER, (timer) -> {})) {
             if (p_219160_.getDifficulty() != Difficulty.HARD && this.random.nextBoolean()) {
                 return flag;
             }
@@ -423,6 +_,7 @@
                 zombievillager.setGossips(villager.getGossips().store(NbtOps.INSTANCE));
                 zombievillager.setTradeOffers(villager.getOffers().copy());
                 zombievillager.setVillagerXp(villager.getVillagerXp());
+                net.neoforged.neoforge.event.EventHooks.onLivingConvert(p_219161_, zombievillager);
                 if (!this.isSilent()) {
                     p_219160_.levelEvent(null, 1026, this.blockPosition(), 0);
                 }
