--- a/net/minecraft/world/entity/animal/Bee.java
+++ b/net/minecraft/world/entity/animal/Bee.java
@@ -119,7 +_,7 @@
     private float rollAmountO;
     private int timeSinceSting;
     int ticksWithoutNectarSinceExitingHive;
-    public int stayOutOfHiveCountdown;
+    private int stayOutOfHiveCountdown;
     private int numCropsGrownSincePollination;
     private static final int COOLDOWN_BEFORE_LOCATING_NEW_HIVE = 200;
     int remainingCooldownBeforeLocatingNewHive;
@@ -128,7 +_,7 @@
     @Nullable
     BlockPos savedFlowerPos;
     @Nullable
-    public BlockPos hivePos;
+    BlockPos hivePos;
     Bee.BeePollinateGoal beePollinateGoal;
     Bee.BeeGoToHiveGoal goToHiveGoal;
     private Bee.BeeGoToKnownFlowerGoal goToKnownFlowerGoal;
@@ -487,7 +_,7 @@
             return false;
         } else {
             BlockEntity blockentity = this.level().getBlockEntity(this.hivePos);
-            return blockentity != null && blockentity.getType() == BlockEntityType.BEEHIVE;
+            return blockentity instanceof BeehiveBlockEntity;
         }
     }
 
@@ -495,7 +_,7 @@
         return this.getFlag(8);
     }
 
-    public void setHasNectar(boolean p_27920_) {
+    void setHasNectar(boolean p_27920_) {
         if (p_27920_) {
             this.resetTicksWithoutNectarSinceExitingHive();
         }
@@ -507,7 +_,7 @@
         return this.getFlag(4);
     }
 
-    public void setHasStung(boolean p_27926_) {
+    private void setHasStung(boolean p_27926_) {
         this.setFlag(4, p_27926_);
     }
 
@@ -636,11 +_,21 @@
     }
 
     @Override
+    @Deprecated // FORGE: use jumpInFluid instead
     protected void jumpInLiquid(TagKey<Fluid> p_204061_) {
+        this.jumpInLiquidInternal();
+    }
+
+    private void jumpInLiquidInternal() {
         this.setDeltaMovement(this.getDeltaMovement().add(0.0, 0.01, 0.0));
     }
 
     @Override
+    public void jumpInFluid(net.neoforged.neoforge.fluids.FluidType type) {
+        this.jumpInLiquidInternal();
+    }
+
+    @Override
     public Vec3 getLeashOffset() {
         return new Vec3(0.0, (double)(0.5F * this.getEyeHeight()), (double)(this.getBbWidth() * 0.2F));
     }
@@ -1049,7 +_,7 @@
         }
     }
 
-    public class BeePollinateGoal extends Bee.BaseBeeGoal {
+    class BeePollinateGoal extends Bee.BaseBeeGoal {
         private static final int MIN_POLLINATION_TICKS = 400;
         private static final int MIN_FIND_FLOWER_RETRY_COOLDOWN = 20;
         private static final int MAX_FIND_FLOWER_RETRY_COOLDOWN = 60;
@@ -1132,7 +_,7 @@
             return this.pollinating;
         }
 
-        public void stopPollinating() {
+        void stopPollinating() {
             this.pollinating = false;
         }
 
