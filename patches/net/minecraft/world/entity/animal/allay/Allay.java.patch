--- a/net/minecraft/world/entity/animal/allay/Allay.java
+++ b/net/minecraft/world/entity/animal/allay/Allay.java
@@ -109,8 +_,8 @@
     private final DynamicGameEventListener<Allay.JukeboxListener> dynamicJukeboxListener;
     private final SimpleContainer inventory = new SimpleContainer(1);
     @Nullable
-    public BlockPos jukeboxPos;
-    public long duplicationCooldown;
+    private BlockPos jukeboxPos;
+    private long duplicationCooldown;
     private float holdingItemAnimationTicks;
     private float holdingItemAnimationTicks0;
     private float dancingAnimationTicks;
@@ -368,9 +_,9 @@
     public boolean wantsToPickUp(ItemStack p_218387_) {
         ItemStack itemstack = this.getItemInHand(InteractionHand.MAIN_HAND);
         return !itemstack.isEmpty()
-            && this.level().getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)
             && this.inventory.canAddItem(p_218387_)
-            && this.allayConsidersItemEqual(itemstack, p_218387_);
+            && this.allayConsidersItemEqual(itemstack, p_218387_)
+            && net.neoforged.neoforge.event.EventHooks.canEntityGrief(this.level(), this);
     }
 
     private boolean allayConsidersItemEqual(ItemStack p_252278_, ItemStack p_250405_) {
@@ -505,7 +_,7 @@
         return DUPLICATION_ITEM.test(p_239736_);
     }
 
-    public void duplicateAllay() {
+    private void duplicateAllay() {
         Allay allay = EntityType.ALLAY.create(this.level());
         if (allay != null) {
             allay.moveTo(this.position());
@@ -516,12 +_,12 @@
         }
     }
 
-    public void resetDuplicationCooldown() {
+    private void resetDuplicationCooldown() {
         this.duplicationCooldown = 6000L;
         this.entityData.set(DATA_CAN_DUPLICATE, false);
     }
 
-    public boolean canDuplicate() {
+    private boolean canDuplicate() {
         return this.entityData.get(DATA_CAN_DUPLICATE);
     }
 
