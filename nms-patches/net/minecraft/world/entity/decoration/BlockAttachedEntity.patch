--- a/net/minecraft/world/entity/decoration/BlockAttachedEntity.java
+++ b/net/minecraft/world/entity/decoration/BlockAttachedEntity.java
@@ -15,6 +15,15 @@
 import net.minecraft.world.phys.Vec3D;
 import org.slf4j.Logger;
 
+// CraftBukkit start
+import net.minecraft.tags.DamageTypeTags;
+import net.minecraft.world.level.block.state.IBlockData;
+import org.bukkit.entity.Hanging;
+import org.bukkit.event.entity.EntityRemoveEvent;
+import org.bukkit.event.hanging.HangingBreakByEntityEvent;
+import org.bukkit.event.hanging.HangingBreakEvent;
+// CraftBukkit end
+
 public abstract class BlockAttachedEntity extends Entity {
 
     private static final Logger LOGGER = LogUtils.getLogger();
@@ -39,7 +48,25 @@
             if (this.checkInterval++ == 100) {
                 this.checkInterval = 0;
                 if (!this.isRemoved() && !this.survives()) {
-                    this.discard();
+                    // CraftBukkit start - fire break events
+                    IBlockData material = this.level().getBlockState(this.blockPosition());
+                    HangingBreakEvent.RemoveCause cause;
+
+                    if (!material.isAir()) {
+                        // TODO: This feels insufficient to catch 100% of suffocation cases
+                        cause = HangingBreakEvent.RemoveCause.OBSTRUCTION;
+                    } else {
+                        cause = HangingBreakEvent.RemoveCause.PHYSICS;
+                    }
+
+                    HangingBreakEvent event = new HangingBreakEvent((Hanging) this.getBukkitEntity(), cause);
+                    this.level().getCraftServer().getPluginManager().callEvent(event);
+
+                    if (this.isRemoved() || event.isCancelled()) {
+                        return;
+                    }
+                    // CraftBukkit end
+                    this.discard(EntityRemoveEvent.Cause.DROP); // CraftBukkit - add Bukkit remove cause
                     this.dropItem((Entity) null);
                 }
             }
@@ -69,6 +96,22 @@
             return false;
         } else {
             if (!this.isRemoved() && !this.level().isClientSide) {
+                // CraftBukkit start - fire break events
+                Entity damager = (damagesource.isDirect()) ? damagesource.getDirectEntity() : damagesource.getEntity();
+                HangingBreakEvent event;
+                if (damager != null) {
+                    event = new HangingBreakByEntityEvent((Hanging) this.getBukkitEntity(), damager.getBukkitEntity(), damagesource.is(DamageTypeTags.IS_EXPLOSION) ? HangingBreakEvent.RemoveCause.EXPLOSION : HangingBreakEvent.RemoveCause.ENTITY);
+                } else {
+                    event = new HangingBreakEvent((Hanging) this.getBukkitEntity(), damagesource.is(DamageTypeTags.IS_EXPLOSION) ? HangingBreakEvent.RemoveCause.EXPLOSION : HangingBreakEvent.RemoveCause.DEFAULT);
+                }
+
+                this.level().getCraftServer().getPluginManager().callEvent(event);
+
+                if (this.isRemoved() || event.isCancelled()) {
+                    return true;
+                }
+                // CraftBukkit end
+
                 this.kill();
                 this.markHurt();
                 this.dropItem(damagesource.getEntity());
@@ -81,6 +124,18 @@
     @Override
     public void move(EnumMoveType enummovetype, Vec3D vec3d) {
         if (!this.level().isClientSide && !this.isRemoved() && vec3d.lengthSqr() > 0.0D) {
+            if (this.isRemoved()) return; // CraftBukkit
+
+            // CraftBukkit start - fire break events
+            // TODO - Does this need its own cause? Seems to only be triggered by pistons
+            HangingBreakEvent event = new HangingBreakEvent((Hanging) this.getBukkitEntity(), HangingBreakEvent.RemoveCause.PHYSICS);
+            this.level().getCraftServer().getPluginManager().callEvent(event);
+
+            if (this.isRemoved() || event.isCancelled()) {
+                return;
+            }
+            // CraftBukkit end
+
             this.kill();
             this.dropItem((Entity) null);
         }
@@ -89,13 +144,22 @@
 
     @Override
     public void push(double d0, double d1, double d2) {
-        if (!this.level().isClientSide && !this.isRemoved() && d0 * d0 + d1 * d1 + d2 * d2 > 0.0D) {
+        if (false && !this.level().isClientSide && !this.isRemoved() && d0 * d0 + d1 * d1 + d2 * d2 > 0.0D) { // CraftBukkit - not needed
             this.kill();
             this.dropItem((Entity) null);
         }
 
     }
 
+    // CraftBukkit start - selectively save tile position
+    @Override
+    public void addAdditionalSaveData(NBTTagCompound nbttagcompound, boolean includeAll) {
+        if (includeAll) {
+            addAdditionalSaveData(nbttagcompound);
+        }
+    }
+    // CraftBukkit end
+
     @Override
     public void addAdditionalSaveData(NBTTagCompound nbttagcompound) {
         BlockPosition blockposition = this.getPos();
